play.application.loader = com.squareoneinsights.merchantportallagomapp.impl.MerchantportallagomappLoader


jdbc-defaults.slick.profile = "slick.jdbc.PostgresProfile$"

db.default.driver = "org.postgresql.Driver"
db.default.url = ${postgres_URL}
db.default.username = ${postgres_USERNAME}
db.default.password = ${postgres_PASSWORD}
db.default.poolInitialSize=1
db.default.poolMaxSize=5
db.default.ConnectionTimeoutMillis=100
db.default.logSql = true

play.http.errorHandler = "com.example.ErrorHandler"

merchant.portal.business.kafka.consume.topic = ${MERCHANT_PORTAL_BUSINESS_CONSUMER_TOPIC}
merchant.portal.business.kafka.consumer-url = ${MERCHANT_PORTAL_BUSINESS_CONSUMER_URL}

merchant.portal.risk.score.kafka.producer.url = ${MERCHANT_RISK_SCORE_PRODUCER_URL}
merchant.portal.risk.score.kafka.producer.topic = ${MERCHANT_RISK_SCORE_PRODUCER_TOPIC}
ifrm.redis.host = ${IFRM_REDIS_HOST}
ifrm.redis.password = ${IFRM_REDIS_PASSWORD}
jwt.encryption.key = ${JWT_ENCRYPTION_KEY}
jwt.token.auth.expirationInSeconds = ${JWT_TOKEN_AUTH_EXPIRATOIN_IN_SECONDS}
jwt.token.refresh.expirationInSeconds = ${JWT_TOKEN_REFRESH_EXPIRATOIN_IN_SECONDS}
windows.ad.url = ${WINDOWS_AD_URL}
windows.ad.domain.name = ${WINDOWS_AD_DOMAIN_NAME}
windows.ad.keystore.path = ${WINDOWS_AD_KEYSTORE_PATH}
windows.ad.keystore.password = ${WINDOWS_AD_KEYSTORE_PASSWORD}
ifrm.password.decrypt.pkcs8.private.key = ${IFRM_PASSWORD_DECRYPT_PKCS8_PRIVATE_KEY}
ifrm.auth.token.redis.ttl = ${IFRM_AUTH_TOKEN_REDIS_TTL}
ifrm.token.validity.minutes = ${IFRM_TOKEN_VALIDITY_MINUTES}
ifrm.cookie.max-age.seconds = ${IFRM_COOKIE_MAX-AGE_SECONDS}


akka.kafka.producer {
  parallelism = 100
  close-timeout = 10s
  use-dispatcher = "akka.kafka.default-dispatcher"
  eos-commit-interval = 20ms
}


play {
    server {
        pidfile.path = "/dev/null"
    }

    http.secret.key = "${APPLICATION_SECRET}"
}

lagom.persistence.jdbc.create-tables.auto = false

akka {
    discovery.method = akka-dns

    cluster {
        shutdown-after-unsuccessful-join-seed-nodes = 60s
    }

    discovery {
        pod-namespace = "myproject"
    }

    management {
        cluster.bootstrap {
            contact-point-discovery {
                discovery-method = kubernetes-api
                service-name = "merchant-portal-lagom-app-api"
                required-contact-point-nr = ${REQUIRED_CONTACT_POINT_NR}
            }
        }
    }

    remote {
        netty.tcp {
            bind-hostname = 0.0.0.0
            bind-port = 2552
        }
    }

}

play.server.akka.illegal-response-header-value-processing-mode = ignore

pac4j.lagom.jwt.authenticator {
  signatures = [
    {
      algorithm = "HS256"
      jwk = {"kty":"oct","k":"N6wefanpbS-IubXsDH2GLh9McGJ2qslG6sdUIzq2YFM","alg":"HS256"}
    }
  ]
  encryptions = [
    {
      method = "A256GCM"
      algorithm = "dir"
      jwk = {"kty":"oct","k":"N6wefanpbS-IubXsDH2GLh9McGJ2qslG6sdUIzq2YFM","alg":"HS256"}
    }
  ]
}

merchant.portal.business.kafka.consume.topic = "merchant-txn-topic"


