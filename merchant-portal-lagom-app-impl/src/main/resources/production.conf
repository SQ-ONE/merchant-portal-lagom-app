
play.application.loader = com.squareoneinsights.merchantportallagomapp.impl.MerchantportallagomappLoader

jdbc-defaults.slick.profile = "slick.jdbc.PostgresProfile$"

db.default.driver = "org.postgresql.Driver"
db.default.url = ${MERCHANT_PORTAL_URL}
db.default.username =  ${MERCHANT_PORTAL_USERNAME}
db.default.password =  ${MERCHANT_PORTAL_PASSWORD}
db.default.poolInitialSize=1
db.default.poolMaxSize=5
db.default.ConnectionTimeoutMillis=100
db.default.logSql = true

play.http.errorHandler = "com.example.ErrorHandler"
#"jdbc:postgresql://localhost:5432/ifrm_acq_load_test"
merchant.portal.business.kafka.consume.topic = ${MERCHANT_PORTAL_BUSINESS_CONSUMER_TOPIC}
merchant.portal.business.kafka.consumer-url = ${MERCHANT_PORTAL_BUSINESS_CONSUMER_URL}

merchant.portal.risk.score.kafka.producer.url = ${MERCHANT_RISK_SCORE_PRODUCER_URL}
merchant.portal.risk.score.kafka.producer.topic = ${MERCHANT_RISK_SCORE_PRODUCER_TOPIC}


akka.kafka.producer {
  parallelism = 100
  close-timeout = 10s
  use-dispatcher = "akka.kafka.default-dispatcher"
  eos-commit-interval = 20ms
}


play {
    server {
        pidfile.path = "/dev/null"
    }

    http.secret.key = "${APPLICATION_SECRET}"
}

lagom.persistence.jdbc.create-tables.auto = false

akka {
    discovery.method = akka-dns

    cluster {
        shutdown-after-unsuccessful-join-seed-nodes = 60s
    }

    discovery {
        pod-namespace = "myproject"
    }

    management {
        cluster.bootstrap {
            contact-point-discovery {
                discovery-method = kubernetes-api
                service-name = "merchant-portal-lagom-app-api"
                required-contact-point-nr = ${REQUIRED_CONTACT_POINT_NR}
            }
        }
    }

    remote {
        netty.tcp {
            bind-hostname = 0.0.0.0
            bind-port = 2552
        }
    }
}

play.server.akka.illegal-response-header-value-processing-mode = ignore
